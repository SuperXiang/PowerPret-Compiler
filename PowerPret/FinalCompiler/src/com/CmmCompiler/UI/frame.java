package com.CmmCompiler.UI;

import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;

import javax.swing.*;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.undo.UndoManager;

import com.CmmCompiler.*;
import com.CmmCompiler.interpreter.*;
import com.CmmCompiler.ParseErr.LexicalError;
import com.CmmCompiler.interpreter.compilerTokenManager;
import com.CmmCompiler.UI.Login;;

/*
 * frame.java
 *
 * Created on Dec,2013
 */

/**
 *
 * @author  PowerPret
 * @function MainForm
 */
public class frame extends javax.swing.JFrame {

	private UndoManager um = new UndoManager();
	private UndoableEditListener undoHandler = new UndoHandler(); 
	private boolean dirty = true;   
    private String strtext = "";   
	 
	
    // Create UndoHandler Implements the interface :UndoableListener   
	 public class UndoHandler implements UndoableEditListener {   
	        public void undoableEditHappened(UndoableEditEvent uee) {   
	            um.addEdit(uee.getEdit());   
	        }   
	    }   
	 
	 
	/** Creates new form frame */
	public frame() {
		setTitle("PowerPret Interpreter");
		initComponents();
		toFront();
		setResizable(false);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jSplitPane1 = new javax.swing.JSplitPane();
		jSplitPane2 = new javax.swing.JSplitPane();
		jLabel1 = new javax.swing.JLabel();
		jScrollPane3 = new javax.swing.JScrollPane();
		jTextArea3 = new javax.swing.JTextArea();
		jTabbedPane1 = new javax.swing.JTabbedPane();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTextArea2 = new javax.swing.JTextArea();
		jScrollPane5 = new javax.swing.JScrollPane();
		jTextArea4 = new javax.swing.JTextArea();
		jPanel1 = new javax.swing.JPanel();
		jLabel2 = new javax.swing.JLabel();
		jScrollPane4 = new javax.swing.JScrollPane();
		jTextArea5 = new javax.swing.JTextArea();
		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu1 = new javax.swing.JMenu();
		jMenuItem3 = new javax.swing.JMenuItem();
		jMenuItem4 = new javax.swing.JMenuItem();
		jMenuItem5 = new javax.swing.JMenuItem();
		jMenuItem6 = new javax.swing.JMenuItem();
		jMenuItem7 = new javax.swing.JMenuItem();
		jMenuItem8 = new javax.swing.JMenuItem();
		jMenuItem9 = new javax.swing.JMenuItem();
		jMenuItem10 = new javax.swing.JMenuItem();
		jMenu3 = new javax.swing.JMenu();
		jMenuItem1 = new javax.swing.JMenuItem();
		jMenuItem2 = new javax.swing.JMenuItem();
		jMenu4 = new javax.swing.JMenu();
		jMenu2 = new javax.swing.JMenu();
		jMenu5 = new javax.swing.JMenu();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				formWindowClosing(evt);
			}
		});

		jSplitPane1.setBorder(null);
		jSplitPane1.setDividerLocation(380);
		jSplitPane1.setDividerSize(30);

		jSplitPane2.setBorder(null);
		jSplitPane2.setDividerLocation(28);
		jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

		jLabel1.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 14));
		jLabel1.setText("CMM Sorce Code");
		jSplitPane2.setTopComponent(jLabel1);

		jTextArea3.setColumns(20);
		jTextArea3.setRows(5);
		jScrollPane3.setViewportView(jTextArea3);
		
		

		// Set LineNumber of TextArea
		LineNumber lineNumber = new LineNumber(jTextArea3);
		jScrollPane3.setRowHeaderView(lineNumber);

		jSplitPane2.setRightComponent(jScrollPane3);

		jSplitPane1.setLeftComponent(jSplitPane2);

		jTextArea1.setColumns(20);
		jTextArea1.setRows(5);
		jTextArea1.setEditable(false);
		jScrollPane1.setViewportView(jTextArea1);

		jTabbedPane1.addTab("Lecxical Result", jScrollPane1);

		jTextArea2.setColumns(20);
		jTextArea2.setRows(5);
		jTextArea2.setEditable(false);
		
		jScrollPane2.setViewportView(jTextArea2);

		jTabbedPane1.addTab("Syntactic Result", jScrollPane2);

		jTextArea4.setColumns(20);
		jTextArea4.setRows(5);
		jTextArea4.setEditable(false);
		jScrollPane5.setViewportView(jTextArea4);

		jTabbedPane1.addTab("Symbol Table", jScrollPane5);

		jSplitPane1.setRightComponent(jTabbedPane1);

		jLabel2.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 14));
		jLabel2.setText("Console");

		jTextArea5.setColumns(20);
		jTextArea5.setRows(5);
		jTextArea5.setEditable(false);
		jScrollPane4.setViewportView(jTextArea5);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(jLabel2)
														.addComponent(
																jScrollPane4,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																803,
																javax.swing.GroupLayout.PREFERRED_SIZE))));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addComponent(jLabel2)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane4,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												123, Short.MAX_VALUE)));
	      
		   // Create the Shotcuts For jMenus  
		     jMenu1.setMnemonic('F');   
		     jMenu5.setMnemonic('E');   
		     jMenu3.setMnemonic('R');   
		     jMenu4.setMnemonic('X');   
		     jMenu2.setMnemonic('A');  
	
	
		  // Create the Shotcuts For jMenuItems
		  KeyStroke ctrlO = KeyStroke.getKeyStroke(KeyEvent.VK_O, InputEvent.CTRL_DOWN_MASK);
		  jMenuItem3.setAccelerator(ctrlO);
		  KeyStroke ctrlS = KeyStroke.getKeyStroke(KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK);
		  jMenuItem4.setAccelerator(ctrlS);
		  KeyStroke ctrlU = KeyStroke.getKeyStroke(KeyEvent.VK_U, InputEvent.CTRL_DOWN_MASK);
		  jMenuItem5.setAccelerator(ctrlU);
		  KeyStroke ctrlR = KeyStroke.getKeyStroke(KeyEvent.VK_R, InputEvent.CTRL_DOWN_MASK);
		  jMenuItem6.setAccelerator(ctrlR);
		  KeyStroke ctrlC = KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.CTRL_DOWN_MASK);
		  jMenuItem7.setAccelerator(ctrlC);
		  KeyStroke ctrlT = KeyStroke.getKeyStroke(KeyEvent.VK_T, InputEvent.CTRL_DOWN_MASK);
		  jMenuItem8.setAccelerator(ctrlT);
		  KeyStroke ctrlY = KeyStroke.getKeyStroke(KeyEvent.VK_Y, InputEvent.CTRL_DOWN_MASK);
		  jMenuItem9.setAccelerator(ctrlY);
		  KeyStroke ctrlP = KeyStroke.getKeyStroke(KeyEvent.VK_P, InputEvent.CTRL_DOWN_MASK);
		  jMenuItem10.setAccelerator(ctrlP);
		  KeyStroke ctrlL = KeyStroke.getKeyStroke(KeyEvent.VK_L, InputEvent.CTRL_DOWN_MASK);
		  jMenuItem1.setAccelerator(ctrlL);
		  KeyStroke ctrlA = KeyStroke.getKeyStroke(KeyEvent.VK_A, InputEvent.CTRL_DOWN_MASK);
		  jMenuItem2.setAccelerator(ctrlA);
		
        //jMenu1 = File
		jMenu1.setText("File");
        //jMenuItem3 = Open
		jMenuItem3.setText("Open");
		jMenuItem3.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jMenuItem3MousePressed(evt);
			}
		});
		jMenu1.add(jMenuItem3);
        //jMenuItem4 = Save
		jMenuItem4.setText("Save");
		jMenuItem4.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jMenuItem4MousePressed(evt);
			}
		});
		jMenu1.add(jMenuItem4);
		jMenuBar1.add(jMenu1);

		
		//jMenu5 = Edit
		jMenu5.setText("Edit");
		//jMenuItem5 = Undo
		jTextArea3.getDocument().addUndoableEditListener(undoHandler); 
		jMenuItem5.setText("Undo");
		jMenuItem5.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jMenuItem5MousePressed(evt);
			}
		});
		jMenu5.add(jMenuItem5);
		//jMenuItem6 = Redo
		jMenuItem6.setText("Redo");
		jMenuItem6.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jMenuItem6MousePressed(evt);
			}
		});
		jMenu5.add(jMenuItem6);
		//jMenuItem7 = Clear
		jMenuItem7.setText("Clear");
		jMenuItem7.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jMenuItem7MousePressed(evt);
			}
		});
		jMenu5.add(jMenuItem7);
		//jMenuItem8 = Cut
		jMenuItem8.setText("Cut");
		jMenuItem8.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jMenuItem8MousePressed(evt);
			}
		});
		jMenu5.add(jMenuItem8);
		//jMenuItem9 = Copy
		jMenuItem9.setText("Copy");
		jMenuItem9.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jMenuItem9MousePressed(evt);
			}
		});
		jMenu5.add(jMenuItem9);
		//jMenuItem10 = Paste
		jMenuItem10.setText("Paste");
		jMenuItem10.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jMenuItem10MousePressed(evt);
			}
		});
		jMenu5.add(jMenuItem10);
		jMenuBar1.add(jMenu5);
		
		
		
		//jMenu3 = Run
		jMenu3.setText("Run");
		//jMenuItem1 = Lexical Analysis
		jMenuItem1.setText("Lexical Analysis");
		jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				
					jMenuItem1MousePressed(evt);
				
			}
		});
		jMenu3.add(jMenuItem1);
		//jMenuItem2 = Syntactic&Semantic Analysis
		jMenuItem2.setText("Syntactic&Semantic Analysis");
		jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jMenuItem2MousePressed(evt);
			}
		});
		jMenu3.add(jMenuItem2);
		jMenuBar1.add(jMenu3);

		//jMenu4 = Exit
		jMenu4.setText("Exit");
		jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jMenu4MousePressed(evt);
			}
		});
		jMenuBar1.add(jMenu4);

		//jMenu2 = About
		jMenu2.setText("About");
		jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jMenu2MousePressed(evt);
			}
		});
		jMenuBar1.add(jMenu2);
		setJMenuBar(jMenuBar1);

		
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								layout
										.createSequentialGroup()
										.addContainerGap(24, Short.MAX_VALUE)
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(
																jPanel1,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jSplitPane1,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																806,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(30, 30, 30)));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addGap(23, 23, 23).addComponent(
						jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE,
						410, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(30,
						30, 30).addComponent(jPanel1,
						javax.swing.GroupLayout.PREFERRED_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(22, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	// About
	private void jMenu2MousePressed(java.awt.event.MouseEvent evt) {
		JOptionPane
				.showMessageDialog(
						this,
						"¡¡* Developer£ºPowerPret¡¡\n"
								+ "              Xiang Yingfei   Man Yuxin   Dai Yuntong   Liu Jiali\n"
								+ "¡¡* Product£ºPower Interpreter¡¡¡¡     \n"
								+ "¡¡* Copyright  2013, PowerPret, WHU. All Rights Reserved.¡¡\n",
						"About", JOptionPane.INFORMATION_MESSAGE);
	}

	//Close
	private void formWindowClosing(java.awt.event.WindowEvent evt) {
		int option = JOptionPane.showConfirmDialog(this, "Do You Want To Exit£¿ ", "WARNING ",
				JOptionPane.YES_NO_OPTION);

		if (option == JOptionPane.YES_OPTION) {
			System.exit(0);
		}else{
			this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
		}
	}

	//Paste
	private void jMenuItem10MousePressed(java.awt.event.MouseEvent evt) {
        if (this.strtext.length() > 0) {   
        	       this.jTextArea3.insert(this.strtext, this.jTextArea3.getCaretPosition());   
        	       this.dirty = true;   
        	 }  
	}
	
	//Copy
	private void jMenuItem9MousePressed(java.awt.event.MouseEvent evt) {
	       try {   
	    	           String str = this.jTextArea3.getSelectedText();   
	    	           if (str.length() != 0) {   
	    	               this.strtext = str;   
	    	            }   
	    	      } catch (Exception ex) {     	    
	         } 
	}
	
	
	//Cut
	private void jMenuItem8MousePressed(java.awt.event.MouseEvent evt) {
	    try {   
            String str = this.jTextArea3.getSelectedText();   
            if (str.length() != 0) {   
	               this.strtext = str;   
	               this.jTextArea3.replaceRange("", this.jTextArea3.getSelectionStart(),   
	                                this.jTextArea3.getSelectionEnd());   
	                this.dirty = true;   
	            }   
	    } catch (Exception ex) {   
	   
	     } 
	}
	
	//Clear
	private void jMenuItem7MousePressed(java.awt.event.MouseEvent evt) {
		    jTextArea3.setText(null);
	}
	
	//Redo Last Step
	private void jMenuItem6MousePressed(java.awt.event.MouseEvent evt) {
		 um.redo();
	}
	
	//Undo Last Input
	private void jMenuItem5MousePressed(java.awt.event.MouseEvent evt) {
		um.undo();
		//jTextArea3.setText(null);
	}

	//Save File
	private void jMenuItem4MousePressed(java.awt.event.MouseEvent evt) {
		int i = JOptionPane.showConfirmDialog(this, "Are You Sure To Save File?");
		if (i == 0) {
			JFileChooser chooser = new JFileChooser("C:\\Program Files");
			int k = chooser.showSaveDialog(this);
			if (k == chooser.APPROVE_OPTION) {
				try {
					FileWriter fw = new FileWriter(chooser.getSelectedFile()
							.getAbsolutePath());
					fw.write(jTextArea3.getText());
					fw.close();
				} catch (IOException e) {
				}				
			} else
				jTextArea3.setText(jTextArea3.getText());
		} else if (i == 1)
			jTextArea3.setText(jTextArea3.getText());
		else
			jTextArea3.setText(jTextArea3.getText());
	}

	//Exit
	private void jMenu4MousePressed(java.awt.event.MouseEvent evt) {
		JOptionPane.showMessageDialog(this,"You Will Exit! ",
				 
                "Notice", JOptionPane.INFORMATION_MESSAGE );
		System.exit(0);
	}

	//Open File
	private void jMenuItem3MousePressed(java.awt.event.MouseEvent evt) {
		String str = "";
		StringBuilder s = new StringBuilder();
		JFileChooser chooser = new JFileChooser(
				"C:\\Documents and Settings\\All Users\\Documents");
		int returnVal = chooser.showOpenDialog(this);
		if (returnVal == chooser.APPROVE_OPTION) {
			try {
				File file = new File(chooser.getSelectedFile()
						.getAbsolutePath());
				int length;
				FileReader in = new FileReader(file);
				char buf[] = new char[1024];
				while ((length = in.read(buf)) != -1) {
					str = new String(buf, 0, length);
					s.append(str);
				}
			} catch (IOException a) {
			}
			jTextArea3.setText(s.toString());
		}
	}

	//Syntactic and Semantic Analysis
	private void jMenuItem2MousePressed(java.awt.event.MouseEvent evt) {
		runSyntactic();
		jTabbedPane1.setSelectedIndex(1);
	}

	//Lexical Analysis
	private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {
		runLexical();
		jTabbedPane1.setSelectedIndex(0);
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		
		Login lg =new Login(3000);
		lg.showWeclomeWindowAndExit();
		
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
			 frame f = new frame();
			   f.setVisible(true);
			   f.setSize(f.getWidth(), f.getHeight());
			   f.setLocationRelativeTo(null);
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JMenu jMenu1;
	private javax.swing.JMenu jMenu2;
	private javax.swing.JMenu jMenu3;
	private javax.swing.JMenu jMenu4;
	private javax.swing.JMenu jMenu5;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JMenuItem jMenuItem1;
	private javax.swing.JMenuItem jMenuItem2;
	private javax.swing.JMenuItem jMenuItem3;
	private javax.swing.JMenuItem jMenuItem4;
	private javax.swing.JMenuItem jMenuItem5;
	private javax.swing.JMenuItem jMenuItem6;
	private javax.swing.JMenuItem jMenuItem7;
	private javax.swing.JMenuItem jMenuItem8;
	private javax.swing.JMenuItem jMenuItem9;
	private javax.swing.JMenuItem jMenuItem10;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JScrollPane jScrollPane4;
	private javax.swing.JScrollPane jScrollPane5;
	private javax.swing.JSplitPane jSplitPane1;
	private javax.swing.JSplitPane jSplitPane2;
	private javax.swing.JTabbedPane jTabbedPane1;
	private javax.swing.JTextArea jTextArea1;
	private javax.swing.JTextArea jTextArea2;
	private javax.swing.JTextArea jTextArea3;
	private javax.swing.JTextArea jTextArea4;
	private javax.swing.JTextArea jTextArea5;
	// End of variables declaration//GEN-END:variables
	StringReader content = new StringReader("this is ");
	BufferedReader br = new BufferedReader(content);
	compiler parser = new compiler(br);

	//Lexical Analysis
	public void runLexical(){
		StringReader content = new StringReader(jTextArea3.getText());
		BufferedReader br = new BufferedReader(content);

		if (jTextArea3.getText().equals("")) {
			JOptionPane.showMessageDialog(null, "Please Input CMM Source Code£¡");
		} else {
			try {
				//Build the "parser" Object,Scan for the First Time,Finish Lexical Analysis				
				compiler.ReInit(br);
				jTextArea1.setText(parser.Lexical());
				showLexicalErr();
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
			
				e.printStackTrace();
			}
	}
}
		
		public void showLexicalErr() throws FileNotFoundException{
			StringReader content = new StringReader(jTextArea3.getText());
			BufferedReader br = new BufferedReader(content);
			compiler.ReInit(br);
		
		//	try {
				//if((parser.Lexicaler())!=""){
					jTextArea5.setText(parser.Lexicaler());
					if((parser.Lexicaler())!=""){

						JOptionPane.showMessageDialog(this, "Lexical Error: \n"+" Please Check Your Code Before Execution! ", "WARNING", JOptionPane.INFORMATION_MESSAGE);
					}
				//}	
		//	} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
			//	e.printStackTrace();
		//	}
			
		}
		



	//Syntactic Analysis
	public void runSyntactic() {
		StringReader content = new StringReader(jTextArea3.getText());
		BufferedReader br = new BufferedReader(content);
		String write;
		

		if (jTextArea3.getText().equals("")) {
			JOptionPane.showMessageDialog(null, "Please Input CMM Source Code£¡");
		} else {
			try {
				//ÖØÐÂ³õÊ¼»¯parser¶ÔÏó£¬½øÐÐµÚ¶þ´ÎÉ¨Ãè£¬Íê³ÉÓï·¨¼°ÓïÒå·ÖÎö
				//´òÓ¡Óï·¨Ê÷ºÍ·ûºÅ±í
				compiler.ReInit(br);
				SimpleNode n = parser.Start();
				jTextArea2.setText(n.dump(""));
				execute exe = new execute(n);
				exe.walk();
				write = exe.Console;
				jTextArea4.setText(exe.varTable.toString());
				jTextArea5.setText(write);
				
				//showSyntacticErr();

			} catch (Exception e) {
				jTextArea5.setText("Syntax Error!  \n");
				jTextArea5.append(compiler.getErrorMsg()); //±¨´í¾ßÌåÐÅÏ¢ÔÚÕâÒ»ÐÐ
			}

		}

	}
	
	public void showSyntacticErr(){
		StringReader content = new StringReader(jTextArea3.getText());
		BufferedReader br = new BufferedReader(content);
		compiler.ReInit(br);
	
		jTextArea5.setText("Syntax Error!  \n");
		jTextArea5.setText(compiler.getErrorMsg()); //Generate Error Messages
		if((jTextArea5.getText())!=""){
		JOptionPane.showMessageDialog(this, "Syntax Error: \n"+" Please Check Your Code Before Execution! ", "WARNING", JOptionPane.INFORMATION_MESSAGE);
		}
	}

}